[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-ClassViewer (https://github.com/Devuna/Devuna-ClassViewer)
!
!    Devuna-ClassViewer is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-ClassViewer is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-ClassViewer.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME winUpdateMethod
[COMMON]
DESCRIPTION 'Update Class Method'
FROM ABC Window
MODIFIED '2008/12/22' '10:31:27'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(MTH:MethodName)
[REPORTCONTROLS]
! STRING(@s20),USE(MTH:MethodName)
MTH:MethodName           LIKE(MethodQ.szMethodName)
!!> GUID('58bdd6d6-603b-426c-a2c0-e37368773fdf'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(MTH:ParameterList)
[REPORTCONTROLS]
! STRING(@s20),USE(MTH:ParameterList)
MTH:ParameterList        LIKE(MethodQ.szPrototype)
!!> GUID('87544a53-3c06-453e-b4ed-18735f618074'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s16),USE(MTH:ReturnType)
[REPORTCONTROLS]
! STRING(@s16),USE(MTH:ReturnType)
MTH:ReturnType           CSTRING(17)
!!> GUID('a140b39f-e720-4f37-b834-b7a4a64b5d93'),PICTURE(@s16)
[SCREENCONTROLS]
! ENTRY(@s6),USE(MTH:CallingConvention)
[REPORTCONTROLS]
! STRING(@s6),USE(MTH:CallingConvention)
MTH:CallingConvention    CSTRING(7)
!!> GUID('f162f44d-6fd6-4a07-a8db-a39caf1aaffa'),PICTURE(@s6)
[SCREENCONTROLS]
! ENTRY(@n3),USE(MTH:Raw)
[REPORTCONTROLS]
! STRING(@n3),USE(MTH:Raw)
MTH:Raw                  BYTE
!!> GUID('ac0ca85d-3d5a-42ff-bd7c-2d79e966299d'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s63),USE(MTH:Name)
[REPORTCONTROLS]
! STRING(@s63),USE(MTH:Name)
MTH:Name                 CSTRING(64)
!!> GUID('d949f6de-b275-4a79-8f80-412ebbc95b6d'),PICTURE(@s63)
[SCREENCONTROLS]
! ENTRY(@n3),USE(MTH:Type)
[REPORTCONTROLS]
! STRING(@n3),USE(MTH:Type)
MTH:Type                 BYTE
!!> GUID('64699d47-2b33-4288-b927-783d4c09613b'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(MTH:DLL)
[REPORTCONTROLS]
! STRING(@n3),USE(MTH:DLL)
MTH:DLL                  BYTE
!!> GUID('876d9f47-6130-40b9-9254-b3c462acddab'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(MTH:Proc)
[REPORTCONTROLS]
! STRING(@n3),USE(MTH:Proc)
MTH:Proc                 BYTE
!!> GUID('39bd6561-9b90-428f-a5fc-e388f81e3739'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s16),USE(MTH:Scope)
[REPORTCONTROLS]
! STRING(@s16),USE(MTH:Scope)
MTH:Scope                CSTRING(17)
!!> GUID('5eb7d36d-e025-4dee-b311-b5e40a1c9d88'),PICTURE(@s16)
[SCREENCONTROLS]
! ENTRY(@s20),USE(MTH:Virtual)
[REPORTCONTROLS]
! STRING(@s20),USE(MTH:Virtual)
MTH:Virtual              LIKE(MethodQ.bVirtual)
!!> GUID('fda5094d-436b-45db-980d-804797b8811b'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n3),USE(MTH:Replace)
[REPORTCONTROLS]
! STRING(@n3),USE(MTH:Replace)
MTH:Replace              BYTE
!!> GUID('947162c3-052b-422b-9ff1-c7da78212eab'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(MTH:Derived)
[REPORTCONTROLS]
! STRING(@n3),USE(MTH:Derived)
MTH:Derived              BYTE
!!> GUID('cf1afb28-5df9-4e3d-9311-626de37ebb3d'),PICTURE(@n3)
[PROMPTS]
%ClassItem UNIQUE DEFAULT  ('Default', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('WindowManager')
WHEN  ('WindowToolbar') ('ToolbarClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('')
WHEN  ('WindowToolbar') ('')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 1
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED', |
  'TakeAccepted {11}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('ThisWindow')
WHEN  ('WindowToolbar') ('Toolbar')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 2
WHEN  ('Default') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 2
WHEN  ('Default') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('ADOProcCommCalled')
WHEN  ('WindowToolbar') ('ADOProcCommCalled')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 2
WHEN  ('Default') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('WindowToolbar')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('WindowToolbar')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('No Special Action')
WHEN  ('?Cancel:Button') ('No Special Action')
WHEN  ('?MTH:Scope') ('No Special Action')
WHEN  ('?OK:Button') ('No Special Action')
WHEN  ('?Panel1') ('No Special Action')
WHEN  ('?szPrototype:Prompt') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel:Button') ('')
WHEN  ('?OK:Button') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel:Button') ('')
WHEN  ('?OK:Button') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?Cancel:Button') ()
WHEN  ('?OK:Button') ()

%ButtonThread DEPEND %Control LONG TIMES 2
WHEN  ('?Cancel:Button') (0)
WHEN  ('?OK:Button') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('25000')
WHEN  ('?Cancel:Button') ('25000')
WHEN  ('?MTH:Scope') ('25000')
WHEN  ('?OK:Button') ('25000')
WHEN  ('?Panel1') ('25000')
WHEN  ('?szPrototype:Prompt') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel:Button') ('')
WHEN  ('?OK:Button') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?Cancel:Button') ()
WHEN  ('?OK:Button') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 2
WHEN  ('?Cancel:Button') (0)
WHEN  ('?OK:Button') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('None')
WHEN  ('?Cancel:Button') ('None')
WHEN  ('?MTH:Scope') ('None')
WHEN  ('?OK:Button') ('None')
WHEN  ('?Panel1') ('None')
WHEN  ('?szPrototype:Prompt') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel:Button') ('')
WHEN  ('?OK:Button') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?Cancel:Button') ()
WHEN  ('?OK:Button') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 8
WHEN  ('') (1)
WHEN  ('?Cancel:Button') (1)
WHEN  ('?MTH:MethodName') (1)
WHEN  ('?MTH:ParameterList') (1)
WHEN  ('?MTH:Scope') (1)
WHEN  ('?OK:Button') (1)
WHEN  ('?Panel1') (1)
WHEN  ('?szPrototype:Prompt') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Cancel:Button')TIMES 0
WHEN  ('?MTH:Scope')TIMES 0
WHEN  ('?OK:Button')TIMES 0
WHEN  ('?Panel1')TIMES 0
WHEN  ('?szPrototype:Prompt')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Cancel:Button')TIMES 0
WHEN  ('?MTH:Scope')TIMES 0
WHEN  ('?OK:Button')TIMES 0
WHEN  ('?Panel1')TIMES 0
WHEN  ('?szPrototype:Prompt')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Cancel:Button')TIMES 0
WHEN  ('?MTH:Scope')TIMES 0
WHEN  ('?OK:Button')TIMES 0
WHEN  ('?Panel1')TIMES 0
WHEN  ('?szPrototype:Prompt')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Cancel:Button')TIMES 0
WHEN  ('?MTH:Scope')TIMES 0
WHEN  ('?OK:Button')TIMES 0
WHEN  ('?Panel1')TIMES 0
WHEN  ('?szPrototype:Prompt')TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Default')

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 1
WHEN  ('')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 1
WHEN  ('')TIMES 0

%ProcedureOneInstance LONG  (0)
%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Panel1') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Panel1') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Panel1') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Panel1') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Panel1') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Panel1') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Panel1') (0)

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?Panel1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-ClassViewer (https://github.com/Devuna/Devuna-ClassViewer)
!
!    Devuna-ClassViewer is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-ClassViewer is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-ClassViewer.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlEventHandling
[INSTANCES]
WHEN '?OK:Button'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
!SORT(ModuleQ,+ModuleQ.lModuleId)
IF TreeQ.lIncludeId
   ModuleQ.lModuleId = TreeQ.lIncludeId
   GET(ModuleQ,+ModuleQ.lModuleId)
 ASSERT(~ERRORCODE())
   AsciiFileName = ModuleQ.szModulePath & ModuleQ.szModuleName
   MyAsciiFileClassActive = MyAsciiFileClass.Init(AsciiFile,AsciiFile.Textline,AsciiFilename,GlobalErrors)
   IF MyAsciiFileClassActive
      MESSAGE(MyAsciiFileClass.GetLine(TreeQ.lLineNum))
      MyAsciiFileClass.Kill()
   END
END
IF TreeQ.lModuleId
   ModuleQ.lModuleId = TreeQ.lModuleId
   GET(ModuleQ,+ModuleQ.lModuleId)
 ASSERT(~ERRORCODE())
   AsciiFileName = ModuleQ.szModulePath & ModuleQ.szModuleName
   MyAsciiFileClassActive = MyAsciiFileClass.Init(AsciiFile,AsciiFile.Textline,AsciiFilename,GlobalErrors)
   IF MyAsciiFileClassActive
      MESSAGE(MyAsciiFileClass.GetLine(TreeQ.lSourceLine))
      MyAsciiFileClass.Kill()
   END
END
[GROUP]
PRIORITY 5100
INSTANCE 3
[END]
[END]
WHEN '?Cancel:Button'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[GROUP]
PRIORITY 5000
INSTANCE 4
[END]
[END]
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Init'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 8030
PROPERTY:END
CASE glo:Background
OF 1  !Color
   window{PROP:Wallpaper} = ''
   window{PROP:Color} = glo:Color2
OF 2  !Wallpaper
   window{PROP:Wallpaper} = glo:szWallpaper2
   window{PROP:Tiled} = glo:Tiled2
   window{PROP:Color} = COLOR:NONE
OF 3  !None
   window{PROP:Wallpaper} = ''
   window{PROP:Color} = COLOR:NONE
END
J = LASTFIELD()
LOOP I = 1 TO J
   SETFONT(I,glo:Typeface,glo:FontSize,glo:FontColor,glo:FontStyle,0)
END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7501
PROPERTY:END
!Initialise the fields
CASE SELF.Request
OF InsertRecord
   MTH:MethodName = ''
   MTH:ParameterList = ''
   MTH:ReturnType = ''
   MTH:CallingConvention = ''
   MTH:Raw = FALSE
   MTH:Name = ''
   MTH:Type = FALSE
   MTH:DLL = FALSE
   MTH:Proc = FALSE
   MTH:Scope = ''
   MTH:Virtual = FALSE
   MTH:Replace = FALSE
   MTH:Derived = FALSE
OF ChangeRecord
   IF TreeQ.lIncludeId
      ModuleQ.lModuleId = TreeQ.lIncludeId
      GET(ModuleQ,+ModuleQ.lModuleId)
    ASSERT(~ERRORCODE())
      AsciiFileName = ModuleQ.szModulePath & ModuleQ.szModuleName
      MyAsciiFileClassActive = MyAsciiFileClass.Init(AsciiFile,AsciiFile.Textline,AsciiFilename,GlobalErrors)
      IF MyAsciiFileClassActive
         MESSAGE(MyAsciiFileClass.GetLine(TreeQ.lLineNum))
         UC_TextLine = UPPER(AsciiFile.Textline)
         MyAsciiFileClass.Kill()

         MTH:MethodName = srcGetLabel(AsciiFile.Textline)
         MTH:ParameterList = srcGetPrototype(AsciiFile.Textline)
         !!MTH:ReturnType = srcGetReturnType(AsciiFile.Textline)
         IF INSTRING('PASCAL',UC_TextLine,1)
            MTH:CallingConvention = 'PASCAL'
         ELSIF (INSTRING(',C,',UC_TextLine,1) OR SUB(UC_TextLine,-2,2) = ',C')
            MTH:CallingConvention = 'C'
         ELSE
            MTH:CallingConvention = ''
         END
         MTH:Raw = CHOOSE(INSTRING(',RAW',UC_TextLine,1)=0,FALSE,TRUE)

         MTH:Name = ''
         MTH:Type = CHOOSE(INSTRING(',TYPE',UC_TextLine,1)=0,FALSE,TRUE)
         MTH:DLL  = CHOOSE(INSTRING(',DLL',UC_TextLine,1)=0,FALSE,TRUE)
         MTH:Proc = CHOOSE(INSTRING(',PROC',UC_TextLine,1)=0,FALSE,TRUE)


         IF INSTRING('PRIVATE',UC_TextLine,1)
            MTH:Scope = 'Private'
         ELSIF INSTRING('PROTECTED',UC_TextLine,1)
            MTH:Scope = 'Protected'
         ELSE
            MTH:Scope = 'Public'
         END

         MTH:Virtual = CHOOSE(INSTRING(',VIRTUAL',UC_TextLine,1)=0,FALSE,TRUE)
         MTH:Replace = CHOOSE(INSTRING(',REPLACE',UC_TextLine,1)=0,FALSE,TRUE)
         MTH:Derived = CHOOSE(INSTRING(',DERIVED',UC_TextLine,1)=0,FALSE,TRUE)

      END
   END
OF DeleteRecord
   !Ask Delete Reecord
END

[SOURCE]
PROPERTY:BEGIN
PRIORITY 9300
PROPERTY:END
IF glo:bUseHTMLHelp
   IF oHH &= NULL
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9700
PROPERTY:END
   ELSE
      oHH.SetHelpFile( 'ABCVIEW.CHM' )
   END
END
[END]
[END]
[END]
EMBED %WindowManagerMethodDataSection
[INSTANCES]
WHEN 'Init'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
I                    LONG,AUTO
J                    LONG,AUTO
[END]
[END]
[END]
EMBED %LocalDataAfterClasses
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
MyAsciiFileClass        kcrAsciiFileClass
MyAsciiFileClassActive  BYTE,AUTO
UC_TextLine             STRING(255)

AsciiFilename           STRING(FILE:MaxFilePath),AUTO,STATIC,THREAD
AsciiFile               FILE,DRIVER('ASCII'),NAME(AsciiFilename),PRE(A1),THREAD
RECORD                    RECORD,PRE()
TextLine                    STRING(255)
                          END
                        END
[END]
[END]
[ADDITION]
NAME ABC cwHHProc
[INSTANCE]
INSTANCE 2
OWNER 5
[PROMPTS]
%cwHHFileName DEFAULT  ('')
%cwHHContextURL DEFAULT  ('')
%cwHHAltTrapKey DEFAULT  ('')
[ADDITION]
NAME KCR KCR_SetWindowHelp
[INSTANCE]
INSTANCE 1
OWNER 4
[PROMPTS]
%TplName DEFAULT  ('KCR_SetWindowHelp (Devuna)')
%TplDescription DEFAULT  ('Set Window Help Property')
[ADDITION]
NAME ABC CloseCurrentWindow
[INSTANCE]
INSTANCE 3
[INSTANCE]
INSTANCE 4
[CALLS]
srcGetLabel
srcGetPrototype
srcGetReturnType
[WINDOW]
Window  WINDOW('Update Method'),AT(,,214,100),FONT(,,COLOR:Black,,CHARSET:ANSI),DOUBLE,TILED, |
          GRAY,PALETTE(256),WALLPAPER('WALLPAPER.GIF')
          PANEL,AT(4,4,206,74),USE(?Panel1),FILL(COLOR:BTNFACE),#ORIG(?Panel1)
          PROMPT('&Method Name:'),AT(8,8),USE(?szMethodName:Prompt),#ORIG(?Prompt1)
          ENTRY(@s20),AT(60,8,146,10),USE(MTH:MethodName),#ORIG(MTH:MethodName)
          PROMPT('&Prototype:'),AT(8,22),USE(?szPrototype:Prompt),#ORIG(?Prompt2)
          ENTRY(@s20),AT(60,22,146,10),USE(MTH:ParameterList),#ORIG(MTH:ParameterList)
          PROMPT('&Scope:'),AT(8,36),USE(?PRO:Scope:Prompt),TRN
          LIST,AT(60,36,,10),USE(MTH:Scope),LEFT(2),DROP(5),FROM('Public|#Public|Privat' & |
            'e|#Private|Protected|#Protected')
          CHECK(' &Virtual'),AT(60,50),USE(MTH:Virtual),#ORIG(MTH:bVirtual)
          BUTTON('&OK'),AT(116,82,45,14),USE(?OK:Button),#ORIG(?Button1)
          BUTTON('Cancel'),AT(165,82,45,14),USE(?Cancel:Button),#ORIG(?Button2)
        END

[END]
