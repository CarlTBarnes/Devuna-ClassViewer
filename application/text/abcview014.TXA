[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-ClassViewer (https://github.com/Devuna/Devuna-ClassViewer)
!
!    Devuna-ClassViewer is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-ClassViewer is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-ClassViewer.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME srcRemoveLabels
PROTOTYPE '(STRING s),STRING'
PARAMETERS '(s)'
[COMMON]
DESCRIPTION 'Remove labels from passed prototype string'
FROM ABC Source
MODIFIED '2003/07/21' '11:33:50'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-ClassViewer (https://github.com/Devuna/Devuna-ClassViewer)
!
!    Devuna-ClassViewer is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-ClassViewer is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-ClassViewer.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
szReturn     CSTRING(1024)
I           LONG,AUTO
J           LONG,AUTO
K           LONG,AUTO
Q           QUEUE,PRE(Q)
szSnip        CSTRING(64)
            END
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  FREE(Q)
  !Copy the passed string to a local variable, removing < and >
  K = 0
  J = LEN(CLIP(s))
  LOOP I = 1 TO J
    IF s[I] = '<<' OR |
       s[I] = '>'
       !do nothing
    ELSE
       K += 1
       szReturn[K] = s[I]
    END
  END
  szReturn[K+1] = '<0>'

  !Remove CONST attribute
  I = INSTRING('CONST ',UPPER(szReturn),1)
  LOOP WHILE I
    szReturn = szReturn[1 : I-1] & szReturn[I+6 : LEN(szReturn)]
    I = INSTRING('CONST ',UPPER(szReturn),1)
  END

  !Split the string at the comma's
  LOOP
    I = INSTRING(',',szReturn)
    IF I
       Q.szSnip = CLIP(LEFT(szReturn[1 : I-1]))
       ADD(Q)
       szReturn = szReturn[I+1 : LEN(szReturn)]
    ELSE
       Q.szSnip = CLIP(LEFT(szReturn))
       ADD(Q)
       szReturn = ''
       BREAK
    END
  END

  !Now loop through the snips and truncate at first space
  J = RECORDS(Q)
  LOOP I = 1 TO J
    GET(Q,I)
    K = INSTRING(' ',Q.szSnip)
    IF K
       Q.szSnip[K] = '<0>'                  !null terminates cstring
       PUT(Q)
    END
  END

  !Finally piece the snips back together
  J = RECORDS(Q)
  LOOP I = 1 TO J
    GET(Q,I)
    szReturn = szReturn & Q.szSnip & ','
  END
  szReturn[LEN(szReturn)] = '<0>'           !replace the trailing comma
  K = LEN(szReturn)                         !and make sure we have a closing ')'
  IF K
     IF szReturn[K] <> ')'
        szReturn[K+1 : K+2] = ')<0>'
     END
  END

  !Return to caller
  RETURN(szReturn)
[END]
[END]
[ADDITION]
NAME ABC cwHHProc
[INSTANCE]
INSTANCE 2
OWNER 5
[PROMPTS]
%cwHHFileName DEFAULT  ('')
%cwHHContextURL DEFAULT  ('')
%cwHHAltTrapKey DEFAULT  ('')
[ADDITION]
NAME KCR KCR_SetWindowHelp
[INSTANCE]
INSTANCE 1
OWNER 4
[PROMPTS]
%TplName DEFAULT  ('KCR_SetWindowHelp (Devuna)')
%TplDescription DEFAULT  ('Set Window Help Property')
[END]
