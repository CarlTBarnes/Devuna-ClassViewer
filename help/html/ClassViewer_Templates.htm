<!--
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-ClassViewer (https://github.com/Devuna/Devuna-ClassViewer)
!
!    Devuna-ClassViewer is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-ClassViewer is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-ClassViewer.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
-->
<html><head><title>ClassViewer Templates</title>
<meta name="GENERATOR" content="Forehtml Pro 5.0">
<link rel="stylesheet" type="text/css" href="ClassViewer.css">


<body>

<table width="100%"><tr>
<td align="left" width="33%"><a href="Contents.htm"><img src="\images\home.gif" align="bottom" alt="Contents"></a></td>
<td align="center" width="33%"></td>
<td align="right" width="33%"><a href="Add_Class_Wizard.htm"><img src="\images\prev.gif" align="bottom" alt="Add Class Wizard"></a>
<a href="Software_Licence.htm"><img src="\images\next.gif" align="bottom" alt="Software Licence"></a></td>
</tr></table><hr>

<p class="BannerBase">
Add Class Wizard Templates</p><hr>
<p class="Base">
The ClassViewer Add Class Wizard uses template files to generate class include (inc) and source (clw)
files.  The files generated are based on templates, simple text files that provide the basic framework
for the output.  Prompts are completed on the Add Class Wizard dialog and then the data entered is used
to replace special tokens inside the template files.  The process is very similar to, but different from,
writing Clarion templates.  The preferred extension for template files is simply .txt or, if you like,
.tpv (for viewer template).  However, you can use any extension you desire.</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<b><span  style="font-size: 12pt ; font-family: Times New Roman,sans-serif; ">Standard Template Tokens</span></b></p>
<p class="Base">
There are several standard template tokes that can be used in the template files:</p>
<p class="Base">
&nbsp;</p><table cellpadding="2">
<tr><td width="192">
<p class="Base">
%BASEclass</p></td><td width="192">
<p class="Base">
This token is replaced by the Base Class selected by the user.  It is not necessary to place this token
on the class definition line as it is automatically placed by the wizard as required.  </p></td></tr>
<tr><td width="192">
<p class="Base">
%CATEGORY</p></td><td width="192">
<p class="Base">
This token is replaced by the Category selected by the user.  It is the Class Category (Template Family)
for the !ABCIncludeFile comment used to identify ABC classes.</p></td></tr>
<tr><td width="192">
<p class="Base">
%classname</p></td><td width="192">
<p class="Base">
This is the Class Name supplied by the user.</p></td></tr>
<tr><td width="192">
<p class="Base">
%CLWFILEname</p></td><td width="192">
<p class="Base">
This is the name of the generated source file supplied by the user.</p></td></tr>
<tr><td width="192">
<p class="Base">
%DATE</p></td><td width="192">
<p class="Base">
This is the file generation date.</p></td></tr>
<tr><td width="192">
<p class="Base">
%INCFILEname</p></td><td width="192">
<p class="Base">
This is the name of the generated include file supplied by the user.</p></td></tr>
<tr><td width="192">
<p class="Base">
%INTERFACES</p></td><td width="192">
<p class="Base">
Place this token in the clw template where the interface methods are to be generated.</p></td></tr>
<tr><td width="192">
<p class="Base">
%METHODS</p></td><td width="192">
<p class="Base">
Place this token in the inc template where the method prototypes are to be declared and place it in the
clw template where the derived method code should be generated.</p></td></tr>
<tr><td width="192">
<p class="Base">
%TIME</p></td><td width="192">
<p class="Base">
This is the file generation time.</p></td></tr></table>

<p class="Base">
&nbsp;</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<a name="Defining_Template_Prompts"></a><b><span  style="font-size: 12pt ; font-family: Times New Roman,sans-serif; ">Defining
Template Prompts</span></b></p>
<p class="Base">
The template prompts are defined in a manner similar to defining standard clarion template prompts.  Please
see the #PROMPT Input Statement in the Clarion Programmers Guide.  #PROMPT statements may be placed in
either the incTemplate and/or the clwTemplate.  All tokens are available for both templates.  The prompt
tokens should be unique in pair of templates chosen for the generator.</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<img src="\images\note21.jpg" alt="\images\note21.jpg" width="51" height="27" align="left">ClassViewer
only supports a subset of control types and attributes provided by the Clarion Template language.</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
ClassViewer supports the following #PROMPT control types:</p>
<p class="Base">
ENtrY - a picture token </p>
<p class="Base">
DROP(<i>scope</i>)</p>
<p class="Base">
OPTION</p>
<p class="Base">
RADIO</p>
<p class="Base">
CHECK</p>
<p class="Base">
SPIN(<i>picture,low,high,step</i>) - a real</p>
<p class="Base">
TEXT - cstring 1025</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
ClassViewer supports the following #PROMPT attributes:</p>
<p class="Base">
DEFAULT(<i>default</i>)</p>
<p class="Base">
AT(<i>x,y,width,height</i>)</p>
<p class="Base">
PROMPTAT(<i>x,y,width,height</i>)</p>
<p class="Base">
VALUE(<i>value</i>)</p>
<p class="Base">
CHOICE</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<b><span  style="font-size: 12pt ; font-family: Times New Roman,sans-serif; ">Defining a Method Header
Prefix</span></b></p>
<p class="Base">
Many programmers like to have a standard prefix appear at the start of every class method.  This would
generally contain comments like purpose, inputs, outputs, programmer, etc.  To support the generation
of this type of method prefix, ClassViewer provides a #PREFIX  #ENDPREFIX group to allow the user to define
their standard prefix.  See the example below in the <a href="#Sample_clwTemplate">Sample clwTemplate</a>.
There are three additional tokens that can be used in a #PREFIX group:</p>
<p class="Base">
&nbsp;</p><table cellpadding="2">
<tr><td width="192">
<p class="Base">
%METHODname</p></td><td width="192">
<p class="Base">
This token is replaced by the name of the method being generated.</p></td></tr>
<tr><td width="192">
<p class="Base">
%PROTOtype</p></td><td width="192">
<p class="Base">
This token is replaced by the prototype of the method being generated.</p></td></tr>
<tr><td width="192">
<p class="Base">
%RETURNtype</p></td><td width="192">
<p class="Base">
This token is replaced by the return type of the method being generated.</p></td></tr></table>

<p class="Base">
&nbsp;</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<b><span  style="font-size: 12pt ; font-family: Times New Roman,sans-serif; ">Sample Include File Template
</span></b>(incTemplate.txt shipped with ClassViewer)</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('User Name:',@S60),%UserName,DEFAULT(ClassViewer),AT(,,180,10)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Copyright:',@S60),%Copyright,DEFAULT(©2017
Devuna),AT(,,180,10)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Check Option 1',CHECK),%Check1,DEFAULT(0),AT(,,,10)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Check Option 2',CHECK),%Check2,DEFAULT(1),AT(80,68,,10)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Comments:',TEXT),%Comments,AT(8,,180,60),PROMPTAT(8,,,)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('How Many?',SPIN(@N10)),%HowMany,AT(,,40,10)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('If file not found',DROP('Create the file|Halt
Program')),%FileNotFound,AT(,,180,10)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Ask for Choice',OPTION),%OptionSymbol,AT(,,180,54)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Option One',RADIO),%OptionSymbolRadio1,VALUE(A)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Option Two',RADIO),%OptionSymbolRadio2,VALUE(B)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('Option Three',RADIO),%OptionSymbolRadio3,VALUE(C)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PROMPT('How Far?',SPIN(@N10)),%HowFar,AT(40,128,40,10),PROMPTAT(,128,36,10)</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!ABCIncludeFile(%Category)</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!================================================================</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!Example class inc template</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!This Class was written by %UserName</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!Copyright %Copyright</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!Creation Date: %Date at %Time</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!================================================================</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">OMIT('_EndOfInclude_',_%ClassNameClassPresent_)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">_%ClassNameClassPresent_ EQUATE(1)</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">%ClassName          class,type,MODULE('%ClwFileName'),link('%ClwFileName',_%CategoryLinkMode_),DLL(_%CategoryDllMode_)</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">Construct             PROCEDURE</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">Destruct              PROCEDURE</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">%Methods21</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
END</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!_EndOfInclude_</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">OMIT('end_omit')</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">Check1 = %Check1</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">Check2 = %Check2</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">How Many? = %HowMany</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">How Far? = %HowFar</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">File Not Found Selection = %FileNotFound</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">Option = %OptionSymbol</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!comments----------------</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!%Comments</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!comments----------------</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!end_omit</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<b><span  style="font-size: 12pt ; font-family: Times New Roman,sans-serif; "><a name="Sample_clwTemplate"></a>Sample
Source File Template </span></b>(clwTemplate.txt shipped with ClassViewer)</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#PREFIX</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! ======================================================================================</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! %MethodName %Prototype</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! purpose :   </span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! inputs :  </span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! outputs :  </span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! returns : %ReturnType</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">! =======================================================================================</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">#ENDPREFIX</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;MEMBER</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!================================================================</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!Example class clw template</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!This Class was written by %UserName</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!Copyright %Copyright</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!Creation Date: %Date at %Time</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">!================================================================</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;INCLUDE('%IncFileName'),ONCE</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;map</span></p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;END</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">%ClassName.Construct PROCEDURE</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;CODE</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;RETURN</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">%ClassName.Destruct PROCEDURE</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;CODE</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">&nbsp;&nbsp;RETURN</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">%Methods</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-family: Courier New,sans-serif; ">%Interfaces</span></p>
<p class="Base">
&nbsp;</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
&nbsp;</p>
<p class="Base">
<span  style="font-size: 8pt ; ">Copyright © 2017 Devuna</span></p>
<p class="Base">
<span  style="font-size: 8pt ; ">All rights reserved.</span></p>
</body></html>
